#include <stdio.h>
#include "graphics.h"
int rotation(char board[6][6]) {
	int i, j;
	char array[3][3], input3, input2;
	setfillstyle(SOLID_FILL, 0);
	floodfill(120, 320, 9);
	while (1) {//this loop is for invalid inputs
		setcolor(14);
		outtextxy(20, 340, "choose a square to rotate : (1 - 4)");
		input2 = getch();
		if (input2 != '1' && input2 != '2' && input2 != '3' && input2 != '4') {//invalid input for number of chosen square
			setcolor(4);
			outtextxy(20, 320, "your input number is invalid.");
			continue;
		}//end of if
		break;
	}//end of while
	setfillstyle(SOLID_FILL, 0);
	floodfill(120, 320, 9);
	while (1) {//this loop is for invalid inputs
		setcolor(14);
		outtextxy(20, 340, "enter the direction to rotate:(+/-)");
		input3 = getch();
		if (input3 == '+') {
			switch (input2) {
			case '2'://changes when input2=2 and input3=+
				for (i = 0; i < 3; i++)
					for (j = 0; j < 3; j++)
						array[j][2 - i] = board[i][j];
				for (i = 0; i < 3; i++)
					for (j = 0; j < 3; j++)
						board[i][j] = array[i][j];
				break;
			case '1'://changes when input2=1 and input3=+
				for (i = 0; i < 3; i++)
					for (j = 3; j < 6; j++)
						array[j - 3][2 - i] = board[i][j];
				for (i = 0; i < 3; i++)
					for (j = 3; j < 6; j++)
						board[i][j] = array[i][j - 3];
				break;
			case '3'://changes when input2=3 and input3=+
				for (i = 3; i < 6; i++)
					for (j = 0; j < 3; j++)
						array[j][5 - i] = board[i][j];
				for (i = 3; i < 6; i++)
					for (j = 0; j < 3; j++)
						board[i][j] = array[i - 3][j];
				break;
			case '4'://changes when input2=3 and input3=+
				for (i = 3; i < 6; i++)
					for (j = 3; j < 6; j++)
						array[j - 3][5 - i] = board[i][j];
				for (i = 3; i < 6; i++)
					for (j = 3; j < 6; j++)
						board[i][j] = array[i - 3][j - 3];
				break;
			}
		}
		else if (input3 == '-') {
			switch (input2) {
			case '2'://changes when input2=2 and input3=-
				for (i = 0; i < 3; i++)
					for (j = 0; j < 3; j++)
						array[2 - j][i] = board[i][j];
				for (i = 0; i < 3; i++)
					for (j = 0; j < 3; j++)
						board[i][j] = array[i][j];
				break;
			case '1'://changes when input2=1 and input3=-
				for (i = 0; i < 3; i++)
					for (j = 3; j < 6; j++)
						array[5 - j][i] = board[i][j];
				for (i = 0; i < 3; i++)
					for (j = 3; j < 6; j++)
						board[i][j] = array[i][j - 3];
				break;
			case '3'://changes when input2=3 and input3=-
				for (i = 3; i < 6; i++)
					for (j = 0; j < 3; j++)
						array[2 - j][i - 3] = board[i][j];
				for (i = 3; i < 6; i++)
					for (j = 0; j < 3; j++)
						board[i][j] = array[i - 3][j];
				break;
			case '4'://changes when input2=4 and input3=-
				for (i = 3; i < 6; i++)
					for (j = 3; j < 6; j++)
						array[5 - j][i - 3] = board[i][j];
				for (i = 3; i < 6; i++)
					for (j = 3; j < 6; j++)
						board[i][j] = array[i - 3][j - 3];
				break;
			}
		}
		else {//invalid input for direction of ratation
			setcolor(4);
			outtextxy(20, 320, "your input number is invalid.");
			continue;
		}

		break;
	}//end of while
	for (j = 0; j<6; j++)
		for (i = 0; i < 6; i++) {//rotation and updating board
			if (board[i][j] == '.') {
				setfillstyle(SOLID_FILL, 1);
				floodfill(25 + j * 50, 25 + i * 50, 9);
			}
			if (board[i][j] == 'b') {
				setfillstyle(SOLID_FILL, BLACK);
				floodfill(25 + j * 50, 25 + i * 50, 9);
			}
			if (board[i][j] == 'w') {
				setfillstyle(SOLID_FILL, WHITE);
				floodfill(25 + j * 50, 25 + i * 50, 9);
			}
		}
	return board[6][6];
}